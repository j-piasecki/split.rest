diff --git a/Libraries/Modal/Modal.d.ts b/Libraries/Modal/Modal.d.ts
index 4cc2df22367b95432747572923b91fb9a6dc802c..a501b275c84ccb41c2b35bbb5e089074278d1d7a 100644
--- a/Libraries/Modal/Modal.d.ts
+++ b/Libraries/Modal/Modal.d.ts
@@ -94,6 +94,11 @@ export interface ModalPropsAndroid {
    *  Determines whether your modal should go under the system statusbar.
    */
   statusBarTranslucent?: boolean | undefined;
+
+  /**
+   *  Determines whether your modal should go under the system navigationbar.
+   */
+  navigationBarTranslucent?: boolean | undefined;
 }
 
 export type ModalProps = ModalBaseProps &
diff --git a/Libraries/Modal/Modal.js b/Libraries/Modal/Modal.js
index f0cb2144532451d55d00753add817da8ebdf3423..2c52e0dcf1373d9f65deab9265c6cf8001163c09 100644
--- a/Libraries/Modal/Modal.js
+++ b/Libraries/Modal/Modal.js
@@ -95,6 +95,14 @@ export type Props = $ReadOnly<{|
    */
   statusBarTranslucent?: ?boolean,
 
+  /**
+   * The `navigationBarTranslucent` prop determines whether your modal should go under
+   * the system navigationbar.
+   *
+   * See https://reactnative.dev/docs/modal.html#navigationbartranslucent-android
+   */
+  navigationBarTranslucent?: ?boolean,
+
   /**
    * The `hardwareAccelerated` prop controls whether to force hardware
    * acceleration for the underlying window.
@@ -170,6 +178,14 @@ function confirmProps(props: Props) {
         `Modal with '${props.presentationStyle}' presentation style and 'transparent' value is not supported.`,
       );
     }
+    if (
+      props.navigationBarTranslucent === true &&
+      props.statusBarTranslucent !== true
+    ) {
+      console.warn(
+        'Modal with translucent navigation bar and without translucent status bar is not supported.',
+      );
+    }
   }
 }
 
@@ -290,6 +306,7 @@ class Modal extends React.Component<Props, State> {
         onDismiss={onDismiss}
         visible={this.props.visible}
         statusBarTranslucent={this.props.statusBarTranslucent}
+        navigationBarTranslucent={this.props.navigationBarTranslucent}
         identifier={this._identifier}
         style={styles.modal}
         // $FlowFixMe[method-unbinding] added when improving typing for this parameters
diff --git a/React/Views/RCTModalHostView.h b/React/Views/RCTModalHostView.h
index 2fcdcaea83f5b240c94c0777d3c32a4749dbdedd..0469c23ca0849317a75e214d4c5f48b7981764b1 100644
--- a/React/Views/RCTModalHostView.h
+++ b/React/Views/RCTModalHostView.h
@@ -27,6 +27,7 @@
 
 // Android only
 @property (nonatomic, assign) BOOL statusBarTranslucent;
+@property (nonatomic, assign) BOOL navigationBarTranslucent;
 @property (nonatomic, assign) BOOL hardwareAccelerated;
 @property (nonatomic, assign) BOOL animated;
 
diff --git a/React/Views/RCTModalHostViewManager.m b/React/Views/RCTModalHostViewManager.m
index 8407662ff18c974431d4841ee2f68215b125673c..0a8e5651b2b12c5d793d853cf9d7b5586ec188bf 100644
--- a/React/Views/RCTModalHostViewManager.m
+++ b/React/Views/RCTModalHostViewManager.m
@@ -131,6 +131,7 @@ - (UIViewController *)_topMostViewControllerFrom:(UIViewController *)rootViewCon
 RCT_EXPORT_VIEW_PROPERTY(presentationStyle, UIModalPresentationStyle)
 RCT_EXPORT_VIEW_PROPERTY(transparent, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(statusBarTranslucent, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(navigationBarTranslucent, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(hardwareAccelerated, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(animated, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(onShow, RCTDirectEventBlock)
diff --git a/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultNewArchitectureEntryPoint.kt b/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultNewArchitectureEntryPoint.kt
index 38b3be0c8839e63d2f7c0fa180746e4940378ba5..edaee98743519c61505a520f82381fa514db1708 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultNewArchitectureEntryPoint.kt
+++ b/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultNewArchitectureEntryPoint.kt
@@ -51,6 +51,8 @@ public object DefaultNewArchitectureEntryPoint {
             // similar bugs related to pressable.
             override fun enableEventEmitterRetentionDuringGesturesOnAndroid(): Boolean =
                 fabricEnabled
+
+            override fun allowRecursiveCommitsWithSynchronousMountOnAndroid(): Boolean = true
           })
     }
 
diff --git a/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/SurfaceMountingManager.java b/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/SurfaceMountingManager.java
index 887dc73189815c208da569585ffe6a006406973f..f881753ca3db71abbfa6c842ad0c456f8101ed55 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/SurfaceMountingManager.java
+++ b/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/SurfaceMountingManager.java
@@ -404,6 +404,7 @@ public class SurfaceMountingManager {
       // thus prevent the RemoveDeleteTree worker from deleting this
       // View in the future.
       if (viewParent instanceof ViewGroup) {
+        ((ViewGroup) viewParent).endViewTransition(view);
         ((ViewGroup) viewParent).removeView(view);
       }
       mErroneouslyReaddedReactTags.add(tag);
diff --git a/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostManager.kt b/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostManager.kt
index f8cadda3ab2dae1797299d44df2498d4a1ed6d66..88157aea50294c68bed983c846c00f4351286b4b 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostManager.kt
+++ b/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostManager.kt
@@ -57,6 +57,14 @@ public class ReactModalHostManager :
     view.statusBarTranslucent = statusBarTranslucent
   }
 
+  @ReactProp(name = "navigationBarTranslucent")
+  public override fun setNavigationBarTranslucent(
+      view: ReactModalHostView,
+      navigationBarTranslucent: Boolean
+  ) {
+    view.navigationBarTranslucent = navigationBarTranslucent
+  }
+
   @ReactProp(name = "hardwareAccelerated")
   public override fun setHardwareAccelerated(
       view: ReactModalHostView,
diff --git a/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostView.kt b/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostView.kt
index 6d35080df3553ffc4d61845a390681b46b4e2773..883d287dc62c4e23a34d0703e9e2d5230c34e2d7 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostView.kt
+++ b/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostView.kt
@@ -47,6 +47,7 @@ import com.facebook.react.uimanager.UIManagerModule
 import com.facebook.react.uimanager.events.EventDispatcher
 import com.facebook.react.views.common.ContextUtils
 import com.facebook.react.views.view.setStatusBarTranslucency
+import com.facebook.react.views.view.setSystemBarsTranslucency
 import com.facebook.react.views.view.ReactViewGroup
 import java.util.Objects
 
@@ -79,6 +80,12 @@ public class ReactModalHostView(context: ThemedReactContext) :
       createNewDialog = true
     }
 
+  public var navigationBarTranslucent: Boolean = false
+    set(value) {
+      field = value
+      createNewDialog = true
+    }
+
   public var animationType: String? = null
     set(value) {
       field = value
@@ -331,7 +338,12 @@ public class ReactModalHostView(context: ThemedReactContext) :
         }
       }
 
-      dialogWindow.setStatusBarTranslucency(statusBarTranslucent)
+      // Navigation bar cannot be translucent without status bar being translucent too
+      dialogWindow.setSystemBarsTranslucency(navigationBarTranslucent)
+
+      if (!navigationBarTranslucent) {
+        dialogWindow.setStatusBarTranslucency(statusBarTranslucent)
+      }
 
       if (transparent) {
         dialogWindow.clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND)
diff --git a/ReactAndroid/src/main/java/com/facebook/react/views/view/WindowUtil.kt b/ReactAndroid/src/main/java/com/facebook/react/views/view/WindowUtil.kt
index 4795564901c049d94bcc0d94400edf905d5ccba3..235dd721e7a3efdf88110c2b602de06472ccd26b 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/views/view/WindowUtil.kt
+++ b/ReactAndroid/src/main/java/com/facebook/react/views/view/WindowUtil.kt
@@ -7,10 +7,14 @@
 
 package com.facebook.react.views.view
 
+import android.content.res.Configuration
+import android.graphics.Color
 import android.os.Build
 import android.view.Window
 import android.view.WindowManager
 import androidx.core.view.ViewCompat
+import androidx.core.view.WindowCompat
+import androidx.core.view.WindowInsetsControllerCompat
 
 @Suppress("DEPRECATION")
 public fun Window.setStatusBarTranslucency(isTranslucent: Boolean) {
@@ -31,6 +35,42 @@ public fun Window.setStatusBarTranslucency(isTranslucent: Boolean) {
   ViewCompat.requestApplyInsets(decorView)
 }
 
+@Suppress("DEPRECATION")
+public fun Window.setSystemBarsTranslucency(isTranslucent: Boolean) {
+  WindowCompat.setDecorFitsSystemWindows(this, !isTranslucent)
+
+  if (isTranslucent) {
+    val isDarkMode =
+      context.resources.configuration.uiMode and Configuration.UI_MODE_NIGHT_MASK ==
+        Configuration.UI_MODE_NIGHT_YES
+
+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
+      isStatusBarContrastEnforced = false
+      isNavigationBarContrastEnforced = false
+    }
+
+    statusBarColor = Color.TRANSPARENT
+    navigationBarColor = when {
+      Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q -> Color.TRANSPARENT
+      Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1 && !isDarkMode ->
+        Color.argb(0xe6, 0xFF, 0xFF, 0xFF)
+      else -> Color.argb(0x80, 0x1b, 0x1b, 0x1b)
+    }
+
+    WindowInsetsControllerCompat(this, this.decorView).run {
+      isAppearanceLightNavigationBars = !isDarkMode
+    }
+
+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
+      attributes.layoutInDisplayCutoutMode = when {
+        Build.VERSION.SDK_INT >= Build.VERSION_CODES.R ->
+          WindowManager.LayoutParams.LAYOUT_IN_DISPLAY_CUTOUT_MODE_ALWAYS
+        else -> WindowManager.LayoutParams.LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES
+      }
+    }
+  }
+}
+
 public fun Window.setStatusBarVisibility(isHidden: Boolean) {
   if (isHidden) {
     this.statusBarHide()
diff --git a/ReactCommon/react/renderer/core/ShadowNode.cpp b/ReactCommon/react/renderer/core/ShadowNode.cpp
index 44cca7436b984ff3340d28c4b24cd8382e063e72..633350c7756761a960721bbd48e63a37b6deeaaf 100644
--- a/ReactCommon/react/renderer/core/ShadowNode.cpp
+++ b/ReactCommon/react/renderer/core/ShadowNode.cpp
@@ -371,6 +371,7 @@ ShadowNode::Unshared ShadowNode::cloneTree(
 
     childNode = parentNode.clone(
         {.children = std::make_shared<ShadowNode::ListOfShared>(children),
+         .state = parentNode.getState(),
          .traits = traits});
   }
 
diff --git a/src/private/specs/components/RCTModalHostViewNativeComponent.js b/src/private/specs/components/RCTModalHostViewNativeComponent.js
index 86bf895d76752698107cd573b91a16e34f6a54c8..58ec2940079bc8baa410c040660955be40b11ca4 100644
--- a/src/private/specs/components/RCTModalHostViewNativeComponent.js
+++ b/src/private/specs/components/RCTModalHostViewNativeComponent.js
@@ -58,6 +58,14 @@ type NativeProps = $ReadOnly<{|
    */
   statusBarTranslucent?: WithDefault<boolean, false>,
 
+  /**
+   * The `navigationBarTranslucent` prop determines whether your modal should go under
+   * the system navigationbar.
+   *
+   * See https://reactnative.dev/docs/modal#navigationBarTranslucent
+   */
+  navigationBarTranslucent?: WithDefault<boolean, false>,
+
   /**
    * The `hardwareAccelerated` prop controls whether to force hardware
    * acceleration for the underlying window.
